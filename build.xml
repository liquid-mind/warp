<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE project>

<project name="Saraswati" default="package-all" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">
	<description>Saraswati</description>
	
	<!-- USER SPECIFIC PROPERTIES -->
	<property file="${user.home}/.saraswati/ant.properties"/>
	<property name="ivy.cache" location="${user.home}/.ivy2"/>
	<property name="logger.config" location="${user.home}/.saraswati-rebooted/logging.properties"/>

	<!-- SOURCE DIRECTORIES -->
	<property name="src" location="${basedir}/src"/>
	<property name="src.main.internal" location="${src}/main/internal/java"/>
	<property name="src.main.external" location="${src}/main/external/java"/>
	<property name="src.web" location="${src}/web/java"/>
	<property name="src.test.user.space" location="${src}/test/userSpace/java"/>
	<property name="src.test.engine.space" location="${src}/test/engineSpace/java"/>
	<property name="src.exwrapper" location="${src}/exwrapper"/>

	<!-- RESOURCE DIRECTORIES -->
	<property name="resources.main.internal" location="${src}/main/internal/resources"/>
	<property name="resources.main.external" location="${src}/main/external/resources"/>
	<property name="resources.web" location="${src}/web/resources"/>
	<property name="resources.test.user.space" location="${src}/test/userSpace/resources"/>
	<property name="resources.test.engine.space" location="${src}/test/engineSpace/resources"/>

	<!-- TARGET DIRECTORIES -->
	<property name="target" location="${basedir}/target"/>
	<property name="target.main" location="${target}/classes/main"/>
	<property name="target.test.user.space" location="${target}/classes/test/userSpace"/>
	<property name="target.test.engine.space" location="${target}/classes/test/engineSpace"/>
	<property name="target.exwrapper" location="${target}/classes/exwrapper"/>
	<property name="target.reports" location="${target}/reports"/>
	<property name="target.javadoc" location="${target}/javadoc"/>

	<!-- TARGET PACKAGES -->
	<property name="saraswati.jar" value="${target}/saraswati.jar"/>
	<property name="saraswati-test-user-space.jar" value="${target}/saraswati-test-user-space.jar"/>
	<property name="saraswati-test-engine-space.jar" value="${target}/saraswati-test-engine-space.jar"/>
	<property name="exwrapper.jar" value="${target}/exwrapper.jar"/>

	<!-- LIBRARY DIRECTORIES -->
	<property name="lib" location="${basedir}/lib"/>

	<!-- VARIABLE (OVERRIDABLE) PROPERTIES -->
	<property name="debug" value="false"/>
	<property name="profile" value="false"/>
	<property name="gen.debug.code" value="on"/>
	<!-- on | off -->

	<!--TASKS-->
	<taskdef resource="net/sf/antcontrib/antlib.xml"/>
	<taskdef name="junit" classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask" classpath="/opt/local/share/java/apache-ant/lib/ant-junit.jar"/>
	
	<!-- COMPILATION PATHS -->
	<path id="libs.compile.main">
		<pathelement location="${target.exwrapper}"/>
		<pathelement location="${lib}/javassist.jar"/>
		<pathelement location="${lib}/commons-lang.jar"/>
		<pathelement location="${lib}/commons-collections.jar"/>
		<pathelement location="${lib}/commons-io.jar"/>
		<pathelement location="${lib}/commons-scxml.jar"/>
		<pathelement location="${lib}/commons-logging.jar"/>
		<pathelement location="${lib}/findbugs.jar"/>
		<pathelement location="${lib}/reflections.jar"/>
		<pathelement location="${lib}/commons-configuration.jar"/>
		<pathelement location="${lib}/javax.servlet-api.jar"/>
		<fileset dir="${lib}">
			<include name="jetty-*.jar"/>
		</fileset>
	</path>

    <path id="libs.compile.test">
		<pathelement location="${lib}/junit.jar"/>
		<pathelement location="${target.main}"/>
		<pathelement location="${target.exwrapper}"/>
		<pathelement location="${lib}/commons-collections.jar"/>
		<pathelement location="${lib}/commons-lang.jar"/>
		<pathelement location="${lib}/javassist.jar"/>
	</path>
	
	<!-- Note that saraswati uses its own classloader that ignores this classpath,
	     however this classpath is necessary to even be able to load EngineClassLoader -->
	<path id="libs.run.test.engine">
		<pathelement location="${lib}/junit.jar"/>
		<pathelement location="${lib}/hamcrest-core.jar"/>
		<pathelement location="${lib}/javassist.jar"/>
		<pathelement location="${lib}/xalan.jar"/>
		<pathelement location="${lib}/commons-lang.jar"/>
		<pathelement location="${lib}/commons-collections.jar"/>
		<pathelement location="${lib}/commons-io.jar"/>
		<pathelement location="${lib}/commons-scxml.jar"/>
		<pathelement location="${lib}/commons-logging.jar"/>
		<pathelement location="${lib}/commons-jexl.jar"/>
		<pathelement location="${lib}/commons-digester.jar"/>
		<pathelement location="${lib}/commons-beanutils.jar"/>
		<pathelement location="${lib}/commons-configuration.jar"/>
		<pathelement location="${saraswati-test-engine-space.jar}"/>
		<pathelement location="${saraswati.jar}"/>
		<pathelement location="${exwrapper.jar}"/>
		<pathelement location="${lib}/javax.servlet-api.jar"/>
		<fileset dir="${lib}">
			<include name="jetty-*.jar"/>
		</fileset>
	</path>

	<!-- INITIALIZATION -->
	<target name="init-libs">
		<if>
			<available file="${lib}/INIT-LIBS-FLAG"/>
			<else>
				<mkdir dir="${lib}"/>
				<touch file="${lib}/INIT-LIBS-FLAG"/>
				<ivy:retrieve pattern="${lib}/[artifact].[ext]"/>
			</else>
		</if>
	</target>

	<target name="init" depends="init-libs">
		<tstamp>
			<format property="DSTAMP" pattern="yyyyMMdd"/>
			<format property="TSTAMP" pattern="HHmmss"/>
		</tstamp>
		<tstamp>
			<format property="tstamp.build" pattern="dd.MM.yyyy HH:mm"/>
		</tstamp>
		<mkdir dir="${target.main}"/>
		<mkdir dir="${target.test.user.space}"/>
		<mkdir dir="${target.test.engine.space}"/>
		<mkdir dir="${target.exwrapper}"/>
		<mkdir dir="${target.reports}"/>
		<mkdir dir="${target.javadoc}"/>
		<delete dir="${user.home}/.saraswati/pobjects"/>
		<if>
			<equals arg1="${debug}" arg2="true"/>
			<then>
				<property name="regular.jvm.debug.arg"
					value="-agentlib:jdwp=transport=dt_socket,address=8000,server=y,suspend=y"/>
			</then>
			<else>
				<property name="regular.jvm.debug.arg" value=""/>
			</else>
		</if>
		<if>
			<equals arg1="${profile}" arg2="true"/>
			<then>
				<property name="profile.arg"
					value="-agentpath:/Applications/jprofiler7/bin/macos/libjprofilerti.jnilib"/>
			</then>
			<else>
				<property name="profile.arg" value=""/>
			</else>
		</if>
	</target>
	
	<!-- COMPILE -->
	<target name="compile-exwrapper" depends="init">
		<javac
			includeantruntime="false"
			srcdir="${src.exwrapper}"
			destdir="${target.exwrapper}"
			classpathref="libs.compile.main"
			debug="on"
			debuglevel="lines,vars,source"
			encoding="UTF8"/>
	</target>
	
	<target name="compile-main" depends="init,compile-exwrapper">
		<javac
			includeantruntime="false"
			srcdir="${src.main.external}:${src.main.internal}:${src.web}"
			destdir="${target.main}"
			classpathref="libs.compile.main"
			debug="on"
			debuglevel="lines,vars,source"
			encoding="UTF8"/>
	</target>
	
	<target name="compile-test-user-space" depends="compile-main">
		<javac
			includeantruntime="false"
			srcdir="${src.test.user.space}"
			destdir="${target.test.user.space}"
			classpathref="libs.compile.test"
			debug="on"
			debuglevel="lines,vars,source"
			encoding="UTF8"/>
	</target>
	
	<target name="compile-test-engine-space" depends="compile-test-user-space">
		<javac
			includeantruntime="false"
			srcdir="${src.test.engine.space}"
			destdir="${target.test.engine.space}"
			classpathref="libs.compile.test"
			debug="on"
			debuglevel="lines,vars,source"
			encoding="UTF8"/>
	</target>
	
	<target name="compile-all" depends="compile-main,compile-test-user-space,compile-test-engine-space,compile-exwrapper"/>

	<!-- PACKAGE -->

	<target name="package-exwrapper" depends="compile-exwrapper">
		<jar destfile="${exwrapper.jar}">
			<zipfileset dir="${target.exwrapper}">
				<include name="**"/>
			</zipfileset>
		</jar>
	</target>
	
	<target name="package-main" depends="compile-main">
		<jar destfile="${saraswati.jar}">
			<zipfileset dir="${target.main}">
				<include name="**"/>
			</zipfileset>
			<zipfileset dir="${resources.main.external}">
				<include name="**"/>
			</zipfileset>
			<zipfileset dir="${resources.main.internal}">
				<include name="**"/>
			</zipfileset>
			<zipfileset dir="${resources.web}">
				<include name="**"/>
			</zipfileset>
		</jar>
	</target>
	
	<target name="package-test-user-space" depends="compile-test-user-space">
		<jar destfile="${saraswati-test-user-space.jar}">
			<zipfileset dir="${target.test.user.space}">
				<include name="**"/>
			</zipfileset>
			<zipfileset dir="${resources.test.user.space}">
				<include name="**"/>
			</zipfileset>
		</jar>
	</target>

	<target name="package-test-engine-space" depends="compile-test-engine-space">
		<jar destfile="${saraswati-test-engine-space.jar}">
			<zipfileset dir="${target.test.engine.space}">
				<include name="**"/>
			</zipfileset>
			<zipfileset dir="${resources.test.engine.space}">
				<include name="**"/>
			</zipfileset>
		</jar>
	</target>
	
	<target name="package-all" depends="package-main,package-exwrapper,package-test-engine-space,package-test-user-space"/>

	<!-- RELEASE -->
	<target name="build-release" depends="package-all">
		<tar destfile="${target}/saraswati-experimental-release.tar" longfile="gnu">
			<tarfileset dir="${target}" prefix="saraswati/bin">
				<include name="saraswati.jar"/>
			</tarfileset>
			<tarfileset dir="${target}" prefix="saraswati/lib">
				<include name="exwrapper.jar"/>
			</tarfileset>
			<tarfileset dir="${lib}" prefix="saraswati/lib">
				<include name="*.*"/>
				<exclude name="ant*.*"/>
			</tarfileset>
			<tarfileset dir="${src}/examples" prefix="saraswati/examples">
				<include name="**/*.*"/>
			</tarfileset>
			<tarfileset dir="${resources.main.external}/defaultConfig" prefix="saraswati/conf">
				<include name="*.*"/>
			</tarfileset>
			<tarfileset file="${resources.main.external}/scripts/saraswati" filemode="755" username="*" group="*" prefix="saraswati/bin"/>
		</tar>
		<gzip destfile="${target}/saraswati-experimental-release.tar.gz" src="${target}/saraswati-experimental-release.tar"/>
	</target>
	
	<target name="install-release" depends="build-release">
		<delete dir="${target}/test-install"/>
		<mkdir dir="${target}/test-install"/>
		<exec executable="tar">
			<arg line="xzf ${target}/saraswati-experimental-release.tar.gz -C ${target}/test-install"/>
		</exec>
		<mkdir dir="${target}/test-install/saraswati/user"/>
	</target>

	<target name="upload-release" depends="build-release">
		<exec executable="rsync">
			<arg line="-aqzP ${target}/saraswati-experimental-release.tar.gz john@shaktipat.ch:/var/www/html/wordpress/wp-content/uploads/saraswati-experimental-release.tar.gz"/>
		</exec>
	</target>
	
	<!-- TESTS -->
	<target name="run-tests" depends="install-release">
		<delete dir="${target.reports}"/>
		<mkdir  dir="${target.reports}"/>
		<copy toDir="${target}/test-install/saraswati/user">
			<fileset dir="${target}" includes="saraswati-test-*.jar">
			</fileset>
		</copy>
		
		<!-- Instrumentation tests -->
		<junit fork="true" forkmode="once" showoutput="true" printsummary="on">
			<jvmarg line="${regular.jvm.debug.arg}"/>
			<jvmarg line="${profile.arg}"/>
			<jvmarg value="-ea"/>						<!-- enable assertions -->
			<jvmarg value="-Djava.util.logging.manager=ch.shaktipat.saraswati.internal.engine.SaraswatiLogManager"/>
			<jvmarg value="-Djava.util.logging.config.file=${logger.config}"/>
			<jvmarg value="-Dch.shaktipat.saraswati.saraswatiHome=${target}/test-install/saraswati"/>
			<classpath refid="libs.run.test.engine"/>
			<formatter type="xml"/>
			<batchtest todir="${target.reports}">
				<zipfileset src="${saraswati-test-engine-space.jar}">
					<include name="**/*Test.class"/>
					<exclude name="**/Abstract*Test.class"/>
				</zipfileset>
			</batchtest>
		</junit>
		<junitreport todir="${target.reports}">
			<fileset dir="${target.reports}">
				<include name="TEST-*.xml"/>
			</fileset>
			<report format="frames" todir="${target.reports}/html"/>
		</junitreport>
	</target>

	<target name="run-tests-single" depends="install-release">
		<delete dir="${target.reports}"/>
		<mkdir  dir="${target.reports}"/>
		<copy toDir="${target}/test-install/saraswati/user">
			<fileset dir="${target}" includes="saraswati-test-*.jar">
			</fileset>
		</copy>
		
		<!-- Instrumentation tests -->
		<junit fork="true" forkmode="once" showoutput="true" printsummary="on">
			<jvmarg line="${regular.jvm.debug.arg}"/>
			<jvmarg line="${profile.arg}"/>
			<jvmarg value="-ea"/>						<!-- enable assertions -->
			<jvmarg value="-Djava.util.logging.manager=ch.shaktipat.saraswati.internal.engine.SaraswatiLogManager"/>
			<jvmarg value="-Djava.util.logging.config.file=${logger.config}"/>
			<jvmarg value="-Dch.shaktipat.saraswati.saraswatiHome=${target}/test-install/saraswati"/>
			<classpath refid="libs.run.test.engine"/>
			<formatter type="xml"/>
			<batchtest todir="${target.reports}">
				<zipfileset src="${saraswati-test-engine-space.jar}">
					<include name="${test.scope}"/>
				</zipfileset>
			</batchtest>
		</junit>
		<junitreport todir="${target.reports}">
			<fileset dir="${target.reports}">
				<include name="TEST-*.xml"/>
			</fileset>
			<report format="frames" todir="${target.reports}/html"/>
		</junitreport>
	</target>
	
	<target name="start-test-server" depends="install-release">
		<copy file="${saraswati-test-engine-space.jar}" todir="${target}/test-install/saraswati/user"/>
		<exec executable="${target}/test-install/saraswati/bin/saraswati">
			<env key="DEBUG" value="${regular.jvm.debug.arg}"/>
		</exec>
	</target>

	<!--
		Note: if the deployed jar file is for any reason deleted then the the RMI API
		on the *client* side throws the following exception:
			java.lang.ClassNotFoundException: javassist.NotFoundException
		I presume this is coming from the PClassPool on the server side, though I haven't
		yet had time to examine it in more detail.
	-->
	<target name="create-test-data" depends="package-all">
		<waitfor maxwait="3" maxwaitunit="minute" checkevery="500">
			<socket server="localhost" port="1099"/>
		</waitfor>
		<java classname="ch.shaktipat.saraswati.test.web.TestDataCreator" fork="true">
			<jvmarg line="${regular.jvm.debug.arg}"/>
			<classpath>
				<pathelement location="${target}/test-install/saraswati/bin/saraswati.jar"/>
				<pathelement location="${target}/test-install/saraswati/lib/exwrapper.jar"/>
				<pathelement location="${target}/test-install/saraswati/lib/javassist-3.18.0-GA.jar"/>
				<pathelement location="${saraswati-test-engine-space.jar}"/>
			</classpath>
		</java>
	</target>
	
	<!-- CLEAN -->
	<target name="clean">
		<delete dir="${target}"/>
		<delete dir="${lib}"/>
	</target>
	
</project>
